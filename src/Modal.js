import React from "react";
import ModalInput from "./ModalInput";
import { GoogleMap } from "@react-google-maps/api";
//import { restaurantData } from "./Reviews";

function Modal({ selectedRestaurant, setSelectedRestaurant }) {
  console.log("selectedRestaurant is", selectedRestaurant);
  function onClickOff() {
    //console.log("closed");
    setSelectedRestaurant(null);
    //console.log(selectedRestaurant)
    //    return
  }
  let service;



  console.log(
    "selectedRestaurant",
    selectedRestaurant,
    selectedRestaurant.place_id
  );

  if (
    selectedRestaurant.restaurantType !== "dummy" ||
    selectedRestaurant.restaurantType === undefined
  ) {
    console.log(" undefined");

    let reviewRequest = {
      placeId: selectedRestaurant.place_id,
      fields: ["name", "rating", "photos", "price_level", "review"],
    };
    //var
     service = new google.maps.places.PlacesService(map);
    service.getDetails(reviewRequest, callback);

  }

  // Checks that the PlacesServiceStatus is OK, and adds a marker
  // using the place ID and location from the PlacesService.
  function callback(results, status) {
    if (status == google.maps.places.PlacesServiceStatus.OK) {
console.log(results)

    }
    /*

          addRestaurant={(restaurant) => {
            setRestaurants([...restaurants, restaurant]);
          }}
          setRestaurants={(restaurants) => {
            setRestaurants([...restaurantData, ...restaurants]);
          }}
*/
  }

  ///////////////////////////////////////////////////////////////////////////////////////////////////////////
  ///////////////////////////////////////////////////////////////////////////////////////////////////////////
  ///////////////////////////////////////////////////////////////////////////////////////////////////////////
  ///////////////////////////////////////////////////////////////////////////////////////////////////////////
  ///////////////////////////////////////////////////////////////////////////////////////////////////////////
  ///////////////////////////////////////////////////////////////////////////////////////////////////////////
  ///////////////////////////////////////////////////////////////////////////////////////////////////////////

  ///////////////////////////////////////////////////////////////////////////////////////////////////////////

  //// focus on details call
  ///////////////////////////////////////////////////////////////////////////////////////////////////////////

  //   then conditions

  // does modal close properly ?
  // reason: modal with reviews will close but inpout modal is not set properly

  ///////////////////////////////////////////////////////////////////////////////////////////////////////////
  ///////////////////////////////////////////////////////////////////////////////////////////////////////////
  ///////////////////////////////////////////////////////////////////////////////////////////////////////////
  ///////////////////////////////////////////////////////////////////////////////////////////////////////////
  ///////////////////////////////////////////////////////////////////////////////////////////////////////////

  if (selectedRestaurant !== null) {
    return (
      // if null change display to none otherwise display block and input to selectedRestaurant

      <article className="Modal">
        <div className="modalPadding">
          <div className="modalClose" onClick={onClickOff}>
            X
          </div>

          {
            ////////////////////////////////////////////////////////////////////////////////////////////////////////}
          }
          <div className="RestaurantReview">
            <ModalInput selectedRestaurant={selectedRestaurant} />
          </div>
        </div>

        {
          ////////////////////////////////////////////////////////////////////////////////////////////////////////}
        }
      </article>
    );
  } else {
    return null;
  }
}

export default Modal;
